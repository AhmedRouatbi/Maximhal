#include "Time.hpp"
//----------------------------------------------------------------------------------------------------------------------

Time::Time() {
    init();
}

void Time::init() {
    // 1mS systick
    if (SysTick_Config(SystemCoreClock / 1000)) {
        while (true);  // Error
    }
}

//----------------------------------------------------------------------------------------------------------------------

Time &Time::getTimeInstance() {
    static Time t;

    return t;
}

volatile uint32_t ticks_ms = 0;

void SysTick_Handler(void) {
    ticks_ms++;
}

//----------------------------------------------------------------------------------------------------------------------

void Time::sleep(uint32_t time_ms) {
    uint32_t timeStart = ticks_ms;
    while (ticks_ms - timeStart < time_ms) {}
}

//----------------------------------------------------------------------------------------------------------------------

uint32_t Time::millis() {
    return ticks_ms;
}

//----------------------------------------------------------------------------------------------------------------------

Time &time() {
    return Time::getTimeInstance();
}

//----------------------------------------------------------------------------------------------------------------------
